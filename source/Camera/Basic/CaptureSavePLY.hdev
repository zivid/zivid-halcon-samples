<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.2" halcon_version="21.11.0.0">
    <procedure name="main">
        <interface/>
        <body>
            <c>*</c>
            <c>* Capture a 3D color point cloud from the camera and save it to a PLY file format.</c>
            <c>*</c>
            <c>* Please note that you first need to install Zivid Software and correctly set the environment variables. After this, you can access the camera with the HALCON</c>
            <c>* GenICamTL interface.</c>
            <c>*</c>
            <c/>
            <c>* Preparing graphics windows</c>
            <l>dev_close_window ()</l>
            <l>WinWidth := 960</l>
            <l>WinHeight := 800</l>
            <l>dev_open_window (0, 0, WinWidth, WinHeight, 'blue', Window3D)</l>
            <c/>
            <c>*Getting first available Zivid device</c>
            <l>info_framegrabber ('GenICamTL','device', Information, Devices)</l>
            <l>import './../../Procedures'</l>
            <l>get_first_available_zivid_device (Devices, Device)</l>
            <c/>
            <c>* Connecting to Zivid camera</c>
            <l>open_framegrabber ('GenICamTL',1, 1, 0, 0, 0, 0, 'progressive', -1, 'default', -1, 'false', 'default', Device, 0, 0, AcqHandle)</l>
            <c/>
            <c>* Configuring 3D-settings</c>
            <l>set_framegrabber_param (AcqHandle, 'create_objectmodel3d', 'enable')</l>
            <l>set_framegrabber_param (AcqHandle, 'add_objectmodel3d_overlay_attrib', 'enable')</l>
            <c/>
            <c>* Switching to single acquisition mode</c>
            <l>set_framegrabber_param (AcqHandle, 'AcquisitionMode', 'SingleFrame')</l>
            <c/>
            <c>* Capturing frame</c>
            <l>grab_data (Image, Region, Contours, AcqHandle, ObjectModel3D)</l>
            <c/>
            <c>* Extracting the following images: X, Y, Z, SNR, and RGB</c>
            <l>select_obj (Image, X, 1)</l>
            <l>select_obj (Image, Y, 2)</l>
            <l>select_obj (Image, Z, 3)</l>
            <l>select_obj (Image, Confidence, 4)</l>
            <l>select_obj (Image, RGB, 5)</l>
            <c/>
            <c>* Transforming 3D points from X, Y, Z images to a HALCON 3D object model</c>
            <l>xyz_to_object_model_3d (X, Y, Z, ObjectModel3D)</l>
            <c/>
            <c>* Adding RGB data to the 3D point cloud</c>
            <l>decompose3 (RGB, R, G, B)</l>
            <c/>
            <l>get_domain (R, Domain)</l>
            <l>get_region_points (Domain, Rows, Columns)</l>
            <l>get_grayval (R, Rows, Columns, GrayvalR)</l>
            <l>set_object_model_3d_attrib_mod (ObjectModel3D, 'red', 'points', GrayvalR)</l>
            <c/>
            <l>get_domain (G, Domain)</l>
            <l>get_region_points (Domain, Rows, Columns)</l>
            <l>get_grayval (G, Rows, Columns, GrayvalG)</l>
            <l>set_object_model_3d_attrib_mod (ObjectModel3D, 'green', 'points', GrayvalG)</l>
            <c/>
            <l>get_domain (B, Domain)</l>
            <l>get_region_points (Domain, Rows, Columns)</l>
            <l>get_grayval (B, Rows, Columns, GrayvalB)</l>
            <l>set_object_model_3d_attrib_mod (ObjectModel3D, 'blue', 'points', GrayvalB)</l>
            <c/>
            <c>* Displaying 3D color point cloud, press the button to continue</c>
            <l>dev_set_window (Window3D)</l>
            <l>Instructions[0] := 'Rotate: Left button'</l>
            <l>Instructions[1] := 'Zoom:   Shift + left button'</l>
            <l>Instructions[2] := 'Move:   Ctrl  + left button'</l>
            <l>visualize_object_model_3d (Window3D, ObjectModel3D, [], [], ['red_channel_attrib','green_channel_attrib','blue_channel_attrib'], ['red','green','blue'], '', [], '', PoseOut)</l>
            <c/>
            <c>* Writing a 3D object model in a PLY file format</c>
            <l>write_object_model_3d (ObjectModel3D, 'ply', 'Zivid3DPLY.ply', ['invert_normals'], ['true'])</l>
            <c/>
            <c>* Disconnecting from Zivid Camera</c>
            <l>close_framegrabber (AcqHandle)</l>
            <c/>
        </body>
        <docu id="main">
            <parameters/>
        </docu>
    </procedure>
</hdevelop>
