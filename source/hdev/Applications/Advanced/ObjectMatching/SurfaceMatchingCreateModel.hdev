<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.2" halcon_version="19.11.0.0">
<procedure name="main">
<interface/>
<body>
<c>* </c>
<c>* Example for the usage of a Zivid 3D camera in HALCON</c>
<c>* </c>
<c>* This example shows how to create a model for HALCON surface-based 3D</c>
<c>* matching algorithm. It should be used together with the</c>
<c>* SurfaceMatchingFindModel.hdev where the model created by this</c>
<c>* program is utilized for surface-based 3D matching algorithm. This</c>
<c>* example comes with HDR settings and other parameters which were used</c>
<c>* to create models of the following three objects: a Twinings tea box,</c>
<c>* a Pringles can (190 g), and a plastic Coca-Cola bottle (0.5 l).</c>
<c>* </c>
<c>* Please note that you first need to install Zivid Software and</c>
<c>* correctly set the environment variables. After this, you can</c>
<c>* access the camera with the HALCON GenICamTL interface.</c>
<c>* </c>
<c></c>
<c>*Get first available Zivid device</c>
<l>info_framegrabber ('GenICamTL','device', Information, Devices)</l>
<l>import './../../../Procedures'</l>
<l>get_first_available_zivid_device (Devices, Device)</l>
<c></c>
<c>* Connecting to the Zivid camera</c>
<l>open_framegrabber ('GenICamTL', 1, 1, 0, 0, 0, 0, 'progressive', -1, 'default', -1, 'false', 'default', Device, 0, 0, AcqHandle)</l>
<c></c>
<c>* Configuring 3D-settings</c>
<l>set_framegrabber_param (AcqHandle, 'create_objectmodel3d', 'enable')</l>
<l>set_framegrabber_param (AcqHandle, 'add_objectmodel3d_overlay_attrib', 'enable')</l>
<c></c>
<c>* Seting the timeout for aborting a pending grab to infinity; useful for longer exposure times</c>
<l>set_framegrabber_param (AcqHandle, 'grab_timeout', -1)</l>
<c></c>
<c>* Switching to the HDR mode</c>
<l>set_framegrabber_param (AcqHandle, 'AcquisitionMode', 'MultiAcquisitionFrame')</l>
<c></c>
<c>* Reseting any previous HDR settings</c>
<l>set_framegrabber_param (AcqHandle, 'ResetAcquisitions', 1)</l>
<c></c>
<c>* Configuring HDR settings (Twinings tea box)</c>
<l>*set_framegrabber_param (AcqHandle, 'ExposureTime', 10000)</l>
<l>*set_framegrabber_param (AcqHandle, 'Aperture', 5.65)</l>
<l>*set_framegrabber_param (AcqHandle, 'AddAcquisition', 1)</l>
<l>*set_framegrabber_param (AcqHandle, 'Aperture', 4.0)</l>
<l>*set_framegrabber_param (AcqHandle, 'AddAcquisition', 1)</l>
<c></c>
<c>* Configuring HDR settings (Pringles can)</c>
<l>*set_framegrabber_param (AcqHandle, 'ExposureTime', 10000)</l>
<l>*set_framegrabber_param (AcqHandle, 'Aperture', 4.36)</l>
<l>*set_framegrabber_param (AcqHandle, 'AddAcquisition', 1)</l>
<l>*set_framegrabber_param (AcqHandle, 'Aperture', 2.0)</l>
<l>*set_framegrabber_param (AcqHandle, 'AddAcquisition', 1)</l>
<c></c>
<c>* Configuring HDR settings (Coca-Cola bottle)</c>
<l>*set_framegrabber_param (AcqHandle, 'ExposureTime', 10000)</l>
<l>*set_framegrabber_param (AcqHandle, 'Aperture', 6.16)</l>
<l>*set_framegrabber_param (AcqHandle, 'AddAcquisition', 1)</l>
<l>*set_framegrabber_param (AcqHandle, 'Aperture', 3.08)</l>
<l>*set_framegrabber_param (AcqHandle, 'AddAcquisition', 1)</l>
<c></c>
<c>* Configuring HDR settings (Your own object)</c>
<l>set_framegrabber_param (AcqHandle, 'ExposureTime', 10000)</l>
<l>set_framegrabber_param (AcqHandle, 'Aperture', 10.37)</l>
<l>set_framegrabber_param (AcqHandle, 'AddAcquisition', 1)</l>
<l>set_framegrabber_param (AcqHandle, 'Aperture', 5.50)</l>
<l>set_framegrabber_param (AcqHandle, 'AddAcquisition', 1)</l>
<l>set_framegrabber_param (AcqHandle, 'Aperture', 2.37)</l>
<l>set_framegrabber_param (AcqHandle, 'AddAcquisition', 1)</l>
<c></c>
<c>* Grabing the HDR image</c>
<l>grab_data (Image, Region, Contours, AcqHandle, ObjectModel3D_Scene)</l>
<c></c>
<c>* Extracting the following images: X, Y, Z, SNR, and RGB</c>
<l>select_obj (Image, X, 1)</l>
<l>select_obj (Image, Y, 2)</l>
<l>select_obj (Image, Z, 3)</l>
<l>select_obj (Image, Confidence, 4)</l>
<l>select_obj (Image, RGBA, 5)</l>
<c></c>
<c>* Preparing the graphics window</c>
<l>dev_close_window ()</l>
<l>WinWidth := 1920</l>
<l>WinHeight := 1200</l>
<l>dev_open_window (0, 0, WinWidth, WinHeight, 'black', Window3D)</l>
<c></c>
<c>* Displaying the RGB image</c>
<l>dev_set_window (Window3D)</l>
<l>dev_display (RGBA)</l>
<c></c>
<c>* Using the mouse cursor to draw a region around the object</c>
<l>dev_disp_text (['Position the mouse cursor on the edge of the object', 'Click and hold the left mouse button to begin drawing the ROI around the object', 'Release the left mouse button to end drawing the ROI', 'Click the right mouse button to continue running the program'], 'window', 'bottom', 'left', 'black', [], [])</l>
<l>draw_region (RegionDraw, Window3D)</l>
<c></c>
<c>* Geting min and max Z values encapsulated by the created region</c>
<l>min_max_gray (RegionDraw, Z, 0, MinZ, MaxZ, RangeZ)</l>
<c></c>
<c>* Segmenting the Z image with Z values encapsulated by the created region</c>
<l>threshold (Z, RegionZ, MinZ, MaxZ)</l>
<l>reduce_domain (Z, RegionZ, Z)</l>
<c></c>
<c>* Segmenting the resulting Z image with the created region</c>
<l>reduce_domain (Z, RegionDraw, Z)</l>
<c></c>
<c>* Transforming 3D points from X, Y, Z images to a HALCON 3D object model</c>
<l>xyz_to_object_model_3d (X, Y, Z, ObjectModel3D)</l>
<c></c>
<c>* Computing normals for the HALCON 3D object model</c>
<l>count_seconds (T0)</l>
<l>sample_object_model_3d (ObjectModel3D, 'fast_compute_normals', 1, [], [], ObjectModel3D)</l>
<l>count_seconds (T1)</l>
<l>TimeForSampling := (T1 - T0)</l>
<c></c>
<c>* Creating a HALCON surface-based matching model</c>
<l>count_seconds (T0)</l>
<l>create_surface_model (ObjectModel3D, 0.01, [], [], SFM)</l>
<l>count_seconds (T1)</l>
<l>TimeForCreating := (T1 - T0)</l>
<c></c>
<c>* Disconnecting from the Zivid Camera</c>
<l>close_framegrabber (AcqHandle)</l>
<c></c>
<c>* Saving the HALCON 3D object model</c>
<l>write_object_model_3d (ObjectModel3D, 'om3', 'ObjectModel3D', [], [] )</l>
<c></c>
<c>* Saving the HALCON surface-based matching model</c>
<l>write_surface_model (SFM,'SFM')</l>
<c></c>
<c>* Loading the HALCON 3D object model</c>
<l>read_object_model_3d ('ObjectModel3D', 'm', [], [], ObjectModel3D, Status)</l>
<c></c>
<c>* Loading the HALCON surface-based matching model</c>
<l>read_surface_model ('SFM', SFM)</l>
<c></c>
<c>* Displaying the 3D color point cloud, press the button to continue</c>
<l>Instructions[0] := 'Rotate: Left button'</l>
<l>Instructions[1] := 'Zoom:   Shift + left button'</l>
<l>Instructions[2] := 'Move:   Ctrl  + left button'</l>
<l>visualize_object_model_3d (Window3D, ObjectModel3D, [], [], [], [], [], [], [], PoseOut)</l>
<c></c>
<c>* Closing the graphics window</c>
<l>dev_set_window (Window3D)</l>
<l>dev_close_window ()</l>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
